/*
 * Copyright 2011 Spark Young (sparkyoungs@gmail.com). All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.archboy.clobaframe.imaging;


/**
 *
 * @author young
 *
 */
public interface Image {

	/**
	 * 
	 * @return 
	 */
	Format getFormat();

	/**
	 * Image width
	 * 
	 * @return 
	 */
	int getWidth();

	/**
	 * Image height
	 * 
	 * @return 
	 */
	int getHeight();

	/**
	 * Get the image data, default by the PNG encoding.
	 * This method also will return the original image data that
	 * generated by ImageFactory.
	 *
	 * @return Return null if error occur.
	 */
	byte[] getImageData();

	/**
	 * Get the image data with the specify output settings.
	 *
	 * @param outputSettings
	 * @return
	 */
	byte[] getImageData(OutputSettings outputSettings);

	public static enum Format {
		BMP, GIF, ICO, JPEG, PNG, TIFF;

		public static Format fromFormatName(String formatName){
			Format format = null;
			String name = formatName.toUpperCase();
			if (name.equals("BMP")){
				format = Format.BMP;
			}else if (name.equals("GIF")){
				format = Format.GIF;
			}else if (name.equals("ICO")){
				format = Format.ICO;
			}else if (name.equals("JPG") || name.equals("JPEG")){
				format = Format.JPEG;
			}else if (name.equals("PNG")){
				format = Format.PNG;
			}else if (name.equals("TIF") || name.equals("TIFF")){
				format = Format.TIFF;
			}
			return format;
		}
	}
}
